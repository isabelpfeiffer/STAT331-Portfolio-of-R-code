---
title: "The Power of Efficiency"
format: html
editor: visual
---

As we’ve said in the class efficiency is a pivotal component of statistical computing (and data science). In this essay, give an explanation of what that term “efficiency” means in relation to statistical computing and describe some places where you encountered efficiency and understood its importance. Your essay should address the following questions:

-   What is the definition of “efficiency”?

-   What does efficiency look like in statistical computing / data science?

-   What does efficiency allow you to do?

-   Why is efficiency important?

-   Where did you encounter efficiency, and what were some [“a-ha” moments](https://www.merriam-webster.com/dictionary/aha%20moment) you had about efficiency? (For the latter, tie each a-ha moment to an artifact in the portfolio.)

I think of efficiency in the context of statistical computing to be optimizing as much as you can. This should be done in many ways. When you are writing code, optimization would look like time spent; using one pipeline rather than spending time creating and saving objects and variables to use later in the same code chunk. It would be taking the reader into consideration; when making plots, freeing the y axis and using horizontal labels when they fit to prevent head titling, and using annotations are distinct colors to minimize confusion. Efficiency is important because it allows you to save time. It allows you the opportunity to catch your mistakes. Long lines of code with lots of unnecessary saved objects can cause confusion or prevent you from catching your mistake in a time efficient manner. I've encountered efficiency in numerous places, an example of this would be in Lab 8. For the portfolio, I used evidence from Challenge 9 (which revised Lab 8) for DVS-6. The question was to make a table summarizing what values were missing. I used a map_int() instead of using a summarize() and across() like I had done in Lab 7 for the same question. This is more efficient because it uses one function instead of two. This was an ah-ha moment for me because I have struggled with the syntax for across(), and now have the knowledge of a more efficient way of summarizing. I now know how to use map functions which eliminates the use of an additional function making it more concise as well. Another ah-ha moment for me was in Lab 3. I used evidence from Lab 3 for many different targets in the portfolio, but one I wanted to touch on was R-2. In Lab 3 question 5, I was able to accomplish 4 different changes in one pipeline, which I was proud of. I was proud of this code chunk because I was able to follow it as a reader. When I go back and look at it, it is easy to follow because each pipeline is properly indented and I can easily tell what each step is doing.
